#!/bin/bash
# Created by Roel Van de Paar, MariaDB

# User variables
SQL_PATH=./knownbugs
#SQL_PATH=./crashes
#SQL_PATH=./minimal  # WIP, needs work
#SQL_PATH=./input  # Default

# Script variables
INSTANCE="afl${1}"

if [ -d ${HOME}/fuzzing ]; then
  rm -f ${HOME}/fuzzing/${INSTANCE}.log
else
  echo "${HOME}/fuzzing does not exist, have you run ~/mariadb-qa/linkit already?"
  exit 1
fi

if [ -z "${1}" ]; then
  echo "Please pass instanceID"
  exit 1
elif [ "$(echo "${1}" | sed 's|^[0-9]$|OK|')" != "OK" ]; then
  echo "Option passed (instanceID: {1}) is not correct. Range: 0-9"
  exit 1
elif [ -z "${2}" ]; then
  echo "Please pass basedir to be tested"
  exit 1 
elif [ ! -d ${SQL_PATH} ]; then
  echo "The SQL_PATH provided (${SQL_PATH}) does not exist, cannot continue"
  exit 1
fi

export LD_LIBRARY_PATH=${2}/lib/
if [ ! -d ${LD_LIBRARY_PATH} ]; then
  if [ -d /test/${2}/lib/ ]; then
    export LD_LIBRARY_PATH=/test/${2}/lib/
  else
    echo "Assert: LD_LIBRARY_PATH (compiled from second option): ${LD_LIBRARY_PATH} does not exist"
    exit 1
  fi
fi

# Note that LD_LIBRARY_PATH code above may have added /test/
export BASEDIR="$(echo ${LD_LIBRARY_PATH} | sed 's|[/]*lib[/]*||')"
if [ ! -r "${BASEDIR}/bin/mysqld" ]; then
  echo "Assert: ${BASEDIR}/bin/mysqld cannot be found"
  exit 1
fi

echo "LD_LIBRARY_PATH    : ${LD_LIBRARY_PATH}"  # It is important that the LD_LIBRARY_PATH is correct

# Setting the AFL_MAP_SIZE size is not required on AFL side
# Instance log is needed for passing of the SHM_ENV_VAR value to __AFL_SHM_ID
export AFL_DISABLE_ASLR=1
screen -admS ${INSTANCE} bash -c "../afl${1}-fuzz -t 2000 -m 20000 -i ${SQL_PATH} -o ../$(date +%s) ${INSTANCE} 2> ~/fuzzing/${INSTANCE}.log"  

echo "Start of instance ${1} complete!"
