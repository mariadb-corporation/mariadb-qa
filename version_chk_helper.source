#!/bin/bash
# Created by Roel Van de Paar, MariaDB

# This helper script is sourced by other scripts (stack.sh, bug_report.sh and myver) and avoids code duplication in those scripts
# As it is sourced rather than executed, it does not need +x

MDG=0
if [ ! -z "$(ls --color=never ./node*/node*.err 2>/dev/null)" ]; then
  MDG=1
fi

if [ -r "${SCRIPT_PWD}/source_code_rev.sh" ]; then
  SOURCE_CODE_REV="$(${SCRIPT_PWD}/source_code_rev.sh)"
elif [ -r "${SCRIPT_PWD}/../source_code_rev.sh" ]; then
  SOURCE_CODE_REV="$(${SCRIPT_PWD}/../source_code_rev.sh)"
elif [ -r "${HOME}/mariadb-qa/source_code_rev.sh" ]; then
  SOURCE_CODE_REV="$(${HOME}/mariadb-qa/source_code_rev.sh)"
else
  SOURCE_CODE_REV='unknown'
fi
SVR=''  # ES,CS,MS
if [ "$(echo "${PWD}" | grep -o EMD)" == "EMD" -o "$(grep "BASEDIR" --binary-files=text ./start 2>/dev/null | grep -o 'EMD' | head -n1)" == "EMD" -o "$(grep --binary-files=text -io "BASEDIR.*" pquery-run.log | grep -o 'EMD' | head -n1)" == "EMD" ]; then
  SERVER_VERSION="$(${BIN} --version | grep -om1 --binary-files=text '[0-9\.]\+-[0-9]\+-MariaDB' | sed 's|-MariaDB||')"
  SVR='ES'
elif [ "$(echo "${PWD}" | grep -o MD)" == "MD" -o "$(grep "BASEDIR" --binary-files=text ./start 2>/dev/null | grep -o 'MD' | head -n1)" == "MD" -o "$(grep --binary-files=text -io "BASEDIR.*" pquery-run.log | grep -o 'MD' | head -n1)" == "MD" ]; then
  SERVER_VERSION="$(${BIN} --version | grep -om1 --binary-files=text '[0-9\.]\+-MariaDB' | sed 's|-MariaDB||')"
  SVR='CS'
elif [ "$(echo "${PWD}" | grep -o MS)" == "MS" -o "$(grep "BASEDIR" --binary-files=text ./start 2>/dev/null | grep -o 'MS' | head -n1)" == "MS" -o "$(grep --binary-files=text -io "BASEDIR.*" pquery-run.log | grep -o 'MS' | head -n1)" == "MS" ]; then
  SERVER_VERSION="MySQL $(pwd | grep -o 'mysql-[\.0-9]\+' | sed 's|mysql-||')"
  SVR='MS'
fi
SERVER_VERSION="$(echo "${SERVER_VERSION}" | tr -d ' ')"

BUILD_TYPE=
DIRFILTER='s|/mysql-test$||;s|/mariadb-test$||;s|/bin$||'
LAST_THREE="$(echo "${PWD}" | sed "${DIRFILTER}" | sed 's|.*\(...\)$|\1|')"
if [ "${LAST_THREE}" != "dbg" -a "${LAST_THREE}" != "opt" ]; then  # in-trial ./stack call
  if [ "${MDG}" -eq 1 ]; then
    LAST_THREE="$(grep --binary-files=text -Eoh "\-dbg|\-opt" ./node*/node*.err 2>/dev/null | head -n1 | sed 's|\-||')"
  else 
    LAST_THREE="$(grep --binary-files=text -Eoh "\-dbg|\-opt" ./log/master.err ./var/log/mysqld.*.err 2>/dev/null | head -n1 | sed 's|\-||')"
  fi 
fi
if [ "${LAST_THREE}" != "dbg" -a "${LAST_THREE}" != "opt" ]; then  # in-trial ./stack call for ES
  LAST_THREE="$(grep --binary-files=text -oh "BASEDIR.*\-[do][bp][gt]" start 2>/dev/null | grep --binary-files=text -Eoh "\-dbg|\-opt" | head -n1 | sed 's|\-||')"
fi
SAN="$(echo "${PWD}" | sed "${DIRFILTER}" | sed 's|.*/||' | grep -o '[UBAT]\+SAN')"
if [ -z "${SAN}" ]; then
  if [ "${LAST_THREE}" == "opt" ]; then BUILD_TYPE=" (Optimized)"; fi
  if [ "${LAST_THREE}" == "dbg" ]; then BUILD_TYPE=" (Debug)"; fi
else
  if [ "${LAST_THREE}" == "opt" ]; then BUILD_TYPE=" (Optimized, ${SAN})"; fi
  if [ "${LAST_THREE}" == "dbg" ]; then BUILD_TYPE=" (Debug, ${SAN})"; fi
fi
if [ -z "${BUILD_TYPE}" -a -r ./BUILD_CMD_CMAKE ]; then
  if ! grep -qi '=Debug' ./BUILD_CMD_CMAKE 2>/dev/null; then
    if [ -z "${SAN}" ]; then BUILD_TYPE=" (Optimized)"; else BUILD_TYPE=" (Optimized, ${SAN})"; fi
  else
    if [ -z "${SAN}" ]; then BUILD_TYPE=" (Debug)"; else BUILD_TYPE=" (Debug, ${SAN})"; fi
  fi
fi
if [ -z "${BUILD_TYPE}" -a -x "${BIN}" ]; then
  if [ "$(${BING} --help 2>&1 | head -n1 | grep -o "\-debug")" == "-debug" ]; then
    BUILD_TYPE=" (Debug)";
  else
    BUILD_TYPE=" (Optimized)";
  fi
fi

# Clear non-needed vars
LAST_THREE=
SAN=
