#!/bin/bash
# Created by Roel Van de Paar, Percona LLC
# Improved by Ramesh Sivaraman, Percona LLC
# Improved by Roel Van de Paar, MariaDB

SCRIPT_PWD=$(cd "`dirname $0`" && pwd)
TRIAL=$(echo "${1}" | sed 's|_val||' | sed 's|[ \t]*||g')  # _val: for Valgrind bugs (reducer_val{trial}.sh generated by pquery-prep-red.sh)

delete_trial(){
  if [[ $MDG -eq 1 ]];then
    rm -Rf ./${TRIAL_DIR} > /dev/null 2>&1
    if [ -z "${MDG_NODE}" ]; then
      rm -f ./reducer${TRIAL}-*.sh > /dev/null 2>&1
    else
      rm -f ./reducer${TRIAL}-${MDG_NODE}.sh > /dev/null 2>&1
      rm -f ./${MDG_TMP_DIR} > /dev/null 2>&1
    fi
    echo "- pquery MDG trial #${TRIAL_DIR} and all related files wiped"
  else
    rm -Rf ./${TRIAL} > /dev/null 2>&1
    rm -f ./reducer${TRIAL}.sh > /dev/null 2>&1
    rm -f ./quick_*reducer${TRIAL}.sh > /dev/null 2>&1
    rm -f ./reducer_val${TRIAL}.sh > /dev/null 2>&1
    rm -f ./quick_*reducer_val${TRIAL}.sh > /dev/null 2>&1
    rm -f ./reducer${TRIAL}-*.sh > /dev/null 2>&1
    rm -f ./quick_*reducer${TRIAL}-*.sh > /dev/null 2>&1
    rm -f ./${TRIAL}_bundle > /dev/null 2>&1
    rm -f ./${TRIAL}_bundle.tar.gz > /dev/null 2>&1
    echo "- pquery trial #${TRIAL} and all related files wiped"
  fi
}

# Check if this is a MariaDB Galera Cluster run
MDG=0
if grep -qi 'MDG Mode:.*TRUE' ./pquery-run.log 2>/dev/null; then
  MDG=1
fi

MDG_NODE=
TRIAL_DIR=
if [[ ${MDG} -eq 1 ]];then
  TRIAL_DIR="$(echo $TRIAL | sed 's|-|/node|')"  # Note that TRIAL_DIR can be a root trial dir i.e. ./100 for trial #100 (invoked as ~/dt 100) or a node subdirectory like ./100/node1 for node 1 in trial #100 (invoked as ~/dt 100-1)
  if [[ "${TRIAL}" == *"-"* ]]; then
    MDG_TMP_DIR="$(echo $TRIAL | sed 's|/node|/tmp|')"
    MDG_NODE="$(echo $TRIAL | cut -d'-' -f2)"
    TRIAL="$(echo $TRIAL | cut -d'-' -f1)"
  fi
fi

if [ "${TRIAL}" == "" ]; then
  echo "This script deletes a given pquery trial completely. Execute this script from within the pquery workdir"
  echo "Example: to delete trial 10 (./10), execute as: ./delete_single_trial.sh 10"
  exit 1
elif [ "$(echo ${TRIAL} | sed 's|[0-9]*||')" != "" ]; then
  echo "Trial number should be a numeric value and isn't (value passed to this script which is not considered numeric: '${TRIAL}')"
  exit 1
elif [ ! -d ./${TRIAL} ]; then
  echo "This script deletes a given pquery trial completely. Execute this script from within the pquery workdir"
  echo "Error: trial number '${TRIAL}' was passed as an option to this script. However, no trial ${TRIAL} directory (./${TRIAL}) exists!"
  echo "Will still attempt to delete all related remaining files, if any"
  exit 1
else 
  # Delete trial directory
  ERRORS=
  ERROR_LOG=
  REGEX_ERRORS_SCAN=
  REGEX_ERRORS_FILTER=
  if [[ "${MDG}" -eq 1 ]]; then
    if [ -z "${MDG_NODE}" ]; then
      ERROR_LOG="./${TRIAL_DIR}/node*.err"
    else
      ERROR_LOG="./${TRIAL_DIR}/node${MDG_NODE}.err"
    fi
  else
    ERROR_LOG="./${TRIAL}/log/master.err"
  fi
  if [ -r ${ERROR_LOG} ]; then
    if [ -r ${SCRIPT_PWD}/REGEX_ERRORS_SCAN ]; then
      REGEX_ERRORS_SCAN="$(cat ${SCRIPT_PWD}/REGEX_ERRORS_SCAN 2>/dev/null)"
      if [ -r ${SCRIPT_PWD}/REGEX_ERRORS_FILTER ]; then
        REGEX_ERRORS_FILTER="$(cat ${SCRIPT_PWD}/REGEX_ERRORS_FILTER 2>/dev/null)"
      fi
      ERRORS="$(grep --binary-files=text -Eio -m1 "${REGEX_ERRORS_SCAN}" ${ERROR_LOG} 2>/dev/null | sort -u 2>/dev/null | grep --binary-files=text -vE "${FILTER}")"
      if [ -z "${ERRORS}" ]; then
        delete_trial
      else
        if [ "${2}" != "1" ]; then
          echo "Not deleting trial ${TRIAL} as a memory or corruption was found in the error log! To delete it anyways please add a '1' as second option to this script!"
        else
          delete_trial
        fi
      fi
    else
      echo "Warning: ${SCRIPT_PWD}/REGEX_ERRORS_SCAN not found, proceeding however the error log was not scanned for errors!"
      delete_trial
    fi
  else
    echo "Warning: ${ERROR_LOG} not found, proceeding to delete all other trial files"
    delete_trial
  fi
fi
