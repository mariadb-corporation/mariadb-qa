#!/usr/bin/sysbench
-- Copyright (C) 2006-2017 Alexey Kopytov <akopytov@gmail.com>

-- This program is free software; you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation; either version 2 of the License, or
-- (at your option) any later version.

-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.

-- You should have received a copy of the GNU General Public License
-- along with this program; if not, write to the Free Software
-- Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

-- ----------------------------------------------------------------------
-- OLTP Point Select benchmark
-- ----------------------------------------------------------------------

require("oltp_common_repl")

sysbench.cmdline.commands.prepare = {
   function ()
      if (not sysbench.opt.auto_inc) then
         -- Create empty tables on prepare when --auto-inc is off, since IDs
         -- generated on prepare may collide later with values generated by
         -- sysbench.rand.unique()
         sysbench.opt.table_size=0
      end

      cmd_prepare()
   end,
   sysbench.cmdline.PARALLEL_COMMAND
}

function prepare_statements()
   -- We do not use prepared statements here, but oltp_common.sh expects this
   -- function to be defined
end

function event()
   local table_name = "sbtest" .. sysbench.rand.uniform(1, sysbench.opt.tables)
   local k_val = sysbench.rand.default(1, sysbench.opt.table_size)
   local c_val = get_c_value()
   local pad_val = get_pad_value()
   local ins_pct = sysbench.opt.inserts
   local del_pct = sysbench.opt.deletes
   local upd_pct = sysbench.opt.updates

   local cur_query = sysbench.rand.uniform(0, 100)
   if cur_query <= ins_pct then
     print("INSERT")
     if (sysbench.opt.auto_inc) then
        con:query(string.format("INSERT INTO %s (k, c, pad) VALUES " ..
                                   "(%d, '%s', '%s')",
                                table_name, k_val, c_val, pad_val))
     else
        if (sysbench.opt.auto_inc) then
           i = 0
        else
           -- Convert a uint32_t value to SQL INT
           i = sysbench.rand.unique() - 2147483648
        end

        con:query(string.format("INSERT INTO %s (id, k, c, pad) VALUES " ..
                                   "(%d, %d, '%s', '%s')",
                                table_name, i, k_val, c_val, pad_val))
     end
   elseif cur_query <= (ins_pct + del_pct) then
     print("DELETE")
     local rand_id = sysbench.rand.uniform(0, sysbench.opt.table_size*2)
     local query = string.format("DELETE FROM %s WHERE id = %d", table_name, rand_id) 
     con:query(query)
   elseif cur_query <= (ins_pct + del_pct + upd_pct) then
     print("UPDATE")
     local old_num = sysbench.rand.uniform(0, sysbench.opt.table_size*2)
     local new_num = sysbench.rand.uniform(0, sysbench.opt.table_size*2)
     local query =  string.format("UPDATE %s SET k = %d WHERE k = %d", table_name, new_num, old_num)
     con:query(query)
   end
end
