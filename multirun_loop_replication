#!/bin/bash
MYEXTRA_OPT="$*"
# Only use this from within a BASEDIR (startup.sh will link this script into any BASEDIR from which it is run)
# TODO: add checking for 2023-10-03 18:04:44 Assert: MASTER_STARTUP_OK=0, SLAVE_STARTUP_OK=0: not both 1. Debug workdir: /dev/shm/169631662194719 or add this functionality (loop retry) to reducer (better)

if [ ! -r ./in.sql ]; then
  echo 'Assert: in.sql not present'
  exit 1
elif [ ! -r ${HOME}/t ]; then
  echo 'Assert: ~/t not present, you may want to execute ~/mariadb-qa/linkit first'
  exit 1
elif [ ! -r ${HOME}/tt ]; then
  echo 'Assert: ~/tt not present, you may want to execute ~/mariadb-qa/linkit first'
  exit 1
else
  echo '----- Testcase (will be looped with a fresh replication setup/startup each time) -----'
  cat in.sql | grep -v '^[ \t]*$'
  if [ ! -z "${MYEXTRA_OPT}" ]; then
    echo '----- Server options used: -----'
    echo "${MYEXTRA_OPT}"
  fi
  echo '-----'
fi
if [ ! -r ./start_replication ]; then
  if [ -r ${HOME}/start -a -d ./bin ]; then
    echo '> It looks like ~/start has not been executed for this BASEDIR, doing so'
    ${HOME}/start
  else
    echo './start_replication not present and neither is ~/start, you may want to execute ~/mariadb-qa/linkit first'
    exit 1
  fi
fi
LOOP=0
./kill_replication >/dev/null 2>&1
export SRNOCL=1  # Do not bring up CLI
while true; do
  LOOP=$[ ${LOOP} + 1 ]
  echo "> Trial #${LOOP}: starting replication"
  ./start_replication ${MYEXTRA_OPT} >/dev/null 2>&1
  ./test_pquery 2>&1 | grep 'Exit status'
  sleep 2
  ./stop_replication >/dev/null 2>&1
  ./kill_replication >/dev/null 2>&1
  MYBUG="$(${HOME}/t 2>&1 | grep -vE '^No relevant strings were found|^Assert: no core file found in')"
  if [ -z "${MYBUG}" ]; then
    echo "> No bug seen (~/t output was empty): retrying"
    continue
  else
    echo "> Found a bug, running ~/tt:"
    ${HOME}/tt
    break
  fi
done
