#!/bin/bash
# Created by Roel Van de Paar, MariaDB

REGEX_EXCLUDE="$(cat REGEX_EXCLUDE 2>/dev/null)"  # Handy to exclude a particular build
if [ -z "${REGEX_EXCLUDE}" ]; then REGEX_EXCLUDE="DUMMYSTRINGNEVERSEEN"; fi

SAN_MODE=0
ERROR_IN_OPTIONS=0
TEXT=
if [ "${1}" == "SAN" -a -z "${2}" ]; then ERROR_IN_OPTIONS=1; fi
if [ -z "${1}" -o "${ERROR_IN_OPTIONS}" -eq 1 ]; then
  echo "This script expects one or two paramaters;"
  echo "  > For SAN bugs, specify: ./findbug SAN 'bug_string_to_look_for'"
  echo "  > For other bugs, specify: ./findbug 'bug_string_to_look_for'"
  echo "After testing of in.sql is complete, this script will look for the string 'bug_string_to_look_for' in the error log."
  echo "It expects that test_all was already executed"
  exit 1
elif [ "${1}" == "SAN" ]; then
  SAN_MODE=1
  TEXT="${2}"  # Presence of ${2} was checked earlier above (ref ERROR_IN_OPTIONS)
else
  TEXT="${1}"
fi

if [ ${SAN_MODE} -eq 1 ]; then
  grep -Ei --binary-files=text "${TEXT}" */log/master.err | grep -vEi --binary-files=text "${REGEX_EXCLUDE}" | grep --binary-files=text -E "SAN"
else
  grep -Ei --binary-files=text "${1}" */log/master.err | grep -vEi --binary-files=text "${REGEX_EXCLUDE}" | grep -vE --binary-files=text "SAN|GAL"
fi
