#!/bin/bash
# Created by Roel Van de Paar, MariaDB

REGEX_EXCLUDE="$(cat REGEX_EXCLUDE 2>/dev/null)"  # Handy to exclude a particular build
if [ -z "${REGEX_EXCLUDE}" ]; then REGEX_EXCLUDE="DUMMYSTRINGNEVERSEEN"; fi

SAN_MODE=0
ERROR_IN_OPTIONS=0
TEXT=
if [ "${1}" == "SAN" -a -z "${2}" ]; then ERROR_IN_OPTIONS=1; fi
if [ -z "${1}" -o "${ERROR_IN_OPTIONS}" -eq 1 ]; then
  echo "This script expects one or two paramaters;"
  echo "  > For SAN bugs, specify: ./findbug+ SAN 'bug_string_to_look_for'"
  echo "  > For other bugs, specify: ./findbug+ 'bug_string_to_look_for'"
  echo "After testing of in.sql is complete, this script will look for the string 'bug_string_to_look_for' in the error log."
  echo "It expects that test_all was already executed"
  exit 1
elif [ "${1}" == "SAN" ]; then
  SAN_MODE=1
  TEXT="${2}"  # Presence of ${2} was checked earlier above (ref ERROR_IN_OPTIONS)
elif [ "${1}" == "GAL" ]; then
  TEXT="${2}"
else
  TEXT="${1}"
fi

rm -f /tmp/pri.t /tmp/sec.t

# Generate full list
if [ "${1}" == "SAN" ]; then
  ls --color=never | grep -vEi --binary-files=text "${REGEX_EXCLUDE}" | grep --binary-files=text "SAN" | sed 's|-linux-x86_64||' | grep -oE --binary-files=text 'mariadb-[\.0-9]+-[od][pb][tg]|mysql-[\.0-9]+-[od][pb][tg]' | sort -u > /tmp/pri.t
elif [ "${1}" == "GAL" ]; then
  REGEX_EXCLUDE="${REGEX_EXCLUDE//EMD|/}"
  ls --color=never | grep -vEi --binary-files=text "${REGEX_EXCLUDE}" | grep --binary-files=text "GAL" | sed 's|-linux-x86_64||' | grep -oE --binary-files=text 'mariadb-[\.0-9]+*.*-[od][pb][tg]|mysql-[\.0-9]+-[od][pb][tg]' | sort -u > /tmp/pri.t
else
  ls --color=never | grep -vEi --binary-files=text "${REGEX_EXCLUDE}" | grep -vE --binary-files=text "SAN|GAL" | sed 's|-linux-x86_64||' | grep -oE --binary-files=text 'mariadb-[\.0-9]+-[od][pb][tg]|mysql-[\.0-9]+-[od][pb][tg]' | sort -u > /tmp/pri.t
fi

# Generate bug list
if [ "${1}" == "SAN" ]; then
  export TEXT="${TEXT}"  # Likely not strictly necessary; defensive coding
  ./findbug SAN | sed 's|-linux-x86_64||' | grep -oE --binary-files=text 'mariadb-[\.0-9]+-[od][pb][tg]|mysql-[\.0-9]+-[od][pb][tg]' | sort -u > /tmp/sec.t
elif [ "${1}" == "GAL" ]; then
  export TEXT="${TEXT}"  # Likely not strictly necessary; defensive coding
  ./findbug GAL "${TEXT}" | sed 's|-linux-x86_64||' | grep -oE --binary-files=text 'mariadb-[\.0-9]+*.*-[od][pb][tg]|mysql-[\.0-9]+-[od][pb][tg]' | sort -u > /tmp/sec.t
else
  ./findbug "${1}" | sed 's|-linux-x86_64||' | grep -oE --binary-files=text 'mariadb-[\.0-9]+-[od][pb][tg]|mysql-[\.0-9]+-[od][pb][tg]' | sort -u > /tmp/sec.t
fi

# Output bug-present-in list
echo "Bug confirmed present in:"
cat /tmp/sec.t | sed 's|-| |;s|mysql|DUMMY2|' | tr '\n' ',' | sed 's|DUMMY2|\nMySQL:|;s|DUMMY2||g;s|,|, |g;s|^mariadb|DUMMY|;s|mariadb ||g;s|DUMMY|MariaDB:|;s|-dbg| (dbg)|g;s|-opt| (opt)|g;' | sed 's|, $||;s|  | |g'; echo ''

# Bug strings for bug-present-in list
#echo -e "\nBug strings for this list:"
#./findbug "$1" | sed 's|:.*||' | xargs -I{} echo "echo {}; ~/mariadb-qa/text_string.sh {}" | xargs -I{} bash -c "{}"

# Compile/output bug-not-present-in list
echo -e "\nBug (or feature/syntax) confirmed not present in:"
diff /tmp/pri.t /tmp/sec.t | grep --binary-files=text '<' | sed 's|^< ||' | sed 's|-| |;s|mysql|DUMMY2|' | tr '\n' ',' | sed 's|DUMMY2|\nMySQL:|;s|DUMMY2||g;s|,|, |g;s|^mariadb|DUMMY|;s|mariadb ||g;s|DUMMY|MariaDB:|;s|-dbg| (dbg)|g;s|-opt| (opt)|g;' | sed 's|, $||;s|  | |g'; echo ''

