#!/bin/bash
# Created by Roel Van de Paar, MariaDB
# Expanded by Ramesh Sivaraman, MariaDB

# This script, when executed in proximity to mysqld (ref code below), shows handy JIRA formatting strings, showing the server version, source code revision and build type. These can then be used to surround stacks, log exerpts, code, etc.

set +H  # Disables history substitution and avoids  -bash: !: event not found  like errors
SCRIPT_PWD=$(dirname $(readlink -f "${0}"))

BIN=
if [ -r ./bin/mariadbd -a ! -d ./bin/mariadbd ]; then
  BIN="./bin/mariadbd"
elif [ -r ./bin/mysqld -a ! -d ./bin/mysqld ]; then  # For direct use in BASEDIR, like ~/tt
  BIN="./bin/mysqld"
elif [ -r ./mariadbd -a ! -d ./mariadbd ]; then  # Ported from previous version of myver script
  BIN="./mariadbd"
elif [ -r ./mysqld -a ! -d ./mysqld ]; then  # Ported from previous version of myver script
  BIN="./mysqld"
elif [ -r ./mysqld/mariadbd -a ! -d ./mysqld/mariadbd ]; then  # Exec from within workdir root
  BIN="./mysqld/mariadbd"
elif [ -r ./mysqld/mysqld -a ! -d ./mysqld/mysqld ]; then  # Exec from within workdir root
  BIN="./mysqld/mysqld"
elif [ -r ../bin/mariadbd -a ! -d ../bin/mariadbd ]; then  # Handy when myver is being executed from the mysql-test dir
  BIN="../bin/mariadbd"
elif [ -r ../bin/mysqld -a ! -d ../bin/mysqld ]; then  # Handy when myver is being executed from the mysql-test dir
  BIN="../bin/mysqld"
elif [ -r ../mariadbd -a ! -d ../mariadbd ]; then  # Not currently used, but provisioned alike to ~/t
  BIN="../mariadbd"
elif [ -r ../mysqld -a ! -d ../mysqld ]; then  # Not currently used, but provisioned alike to ~/t
  BIN="../mysqld"
elif [ -r ../mysqld/mariadbd -a ! -d ../mysqld/mariadbd ]; then  # For direct use inside trial directories
  BIN="../mysqld/mariadbd"
elif [ -r ../mysqld/mysqld -a ! -d ../mysqld/mysqld ]; then  # For direct use inside trial directories
  BIN="../mysqld/mysqld"
elif [ -r ./log/master.err ]; then
  POTENTIAL_BIN="$(grep "ready for connections" ./log/master.err | sed 's|: .*||;s|^.* ||' | head -n1)"
  if [ -f ${POTENTIAL_BIN} -a -r ${POTENTIAL_BIN} ]; then
    BIN="${POTENTIAL_BIN}"
  fi
elif [ -r ./node1/node1.err ]; then
  POTENTIAL_BIN="$(grep "ready for connections" ./node1/node1.err | sed 's|: .*||;s|^.* ||' | head -n1)"
  if [ -f ${POTENTIAL_BIN} -a -r ${POTENTIAL_BIN} ]; then
    BIN="${POTENTIAL_BIN}"
  fi
fi

if [ -z "${BIN}" ]; then
  echo "Assert: mysqld not found at ./bin/mysqld, nor ../mysqld, nor ../mysqld/mysqld nor other potential mysqld's extracted from any logs at ./log/master.err or ./node1/node1.err"
  exit 1
fi

# Call the version check helper script to set the following vars:
# SOURCE_CODE_REV, SVR, SERVER_VERSION, BUILD_TYPE, MDG
# Note: this helper script find/call code is universal; it will works for/from all scripts
if [ -r "${SCRIPT_PWD}/../version_chk_helper.source" ]; then
  source "${SCRIPT_PWD}/../version_chk_helper.source"
elif [ -r "${SCRIPT_PWD}/version_chk_helper.source" ]; then
  source "${SCRIPT_PWD}/version_chk_helper.source"
else
  echo "Assert: version_chk_helper.sh not found/readable by this script ($0)"
  exit 1
fi

echo "{noformat:title=${SVR} ${SERVER_VERSION} ${SOURCE_CODE_REV}${BUILD_TYPE}}"
echo ""
echo "{noformat}"
