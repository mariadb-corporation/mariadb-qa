#!/bin/bash
# Also see ~/mariadb-qa/memory_leaks_howto.txt for related throubleshooting info, otherwise unrelated to the monitoring script below

# User variables
KILL_LARGE=1         # Will kill any process consuming equal to or more then KILL_PERCENT.0 percent of memory
KILL_PERCENT=7       # For example: 4: All processes using >=4% of memory will be killed
KILL_LONG_RUNNING=1  # Terminate all relevant too-long-running processes, ref terminate_long_running.sh
FILTER="uniq_newbugs|large_newbug_run|findbug|bug_report|pquery-results|xargs|grep|timeout|build|fireworks|cc|clang|perl|mtr_to_sql|generator.sh|mysql-test-run|mtr|swapoff|swapon"  # Filter this list of processes from termination

if [ "${STY}" == "" ]; then
  THIS_SCRIPT="$(readlink -f $0)"  # Resolves symlinks, result is the actual script including directory
  SCREEN_NAME='memory'
  echo "Not a screen, restarting myself inside a screen"
  screen -admS "${SCREEN_NAME}" bash -c "${THIS_SCRIPT} ${*}"
  sleep 1
  screen -d -r "${SCREEN_NAME}"
  return 2> /dev/null; exit 0
fi

while :; do
  # Terminate all relevant (servers, clients, pquery) too-long-running processes
  if [ "${KILL_LONG_RUNNING}" -eq 1 ]; then
    if [ -r "/test/terminate_long_running.sh" ]; then
      /test/terminate_long_running.sh
    elif [ -r "${HOME}/mariadb-qa/mariadb-build-qa/terminate_long_running.sh" ]; then
      ${HOME}/mariadb-qa/mariadb-build-qa/terminate_long_running.sh
    fi
    sleep 1
  fi
  clear
  # Do not include pquery in the next filter statement; it is fine to terminate a memory-hogging pquery instance (never actually seen, but in principle)
  CMD="ps --sort -rss -eo pid,pmem,rss,vsz,comm | grep --binary-files=text -vE '${FILTER}|reducer'"
  eval "${CMD}" | head -n7
  HEADLINE=;PERCENT=;PID=
  if [ "${KILL_LARGE}" -eq 1 ]; then
    # Do not terminate generator.sh nor cc1plus or any other *cc* program
    HEADLINE="$(eval "${CMD}" | head -n2 | tail -n1)"
    PERCENT="$(echo ${HEADLINE} | awk '{print $2}' | sed 's|\.[0-9]\+||;s|[ \t]||g')"
    PID="$(echo ${HEADLINE} | awk '{print $1}' | sed 's|[ \t]||g')"
    if [ ${PERCENT} -ge ${KILL_PERCENT} ]; then
      echo "Process ${PID} is consuming too much memory (${PERCENT}%): terminating..."
      echo "Process ${PID} snapshot:"
      ps -ef | grep "${PID}" | grep -v grep
      sleep 1
      kill -9 ${PID}
      kill -9 ${PID}
      kill -9 ${PID}
      sleep 5  # Allows user to notice/read message
    fi
  fi
  echo ''
  echo -e "USER\tTTY\tJCPU\tPCPU\tCOMMAND"
  w -h | awk '{print $1"\t"$2"\t"$6"\t"$7"\t"$8" "$9" "$10" "$11" "$12" "$13" "$14" "$15" "$16" "$17" "$18" "$19" "$20}' | grep -E '[0-9][0-9]\.[0-9][0-9]s|[0-9]:[0-9][0-9]m' | grep -v 'sleep' | grep -v 'awk'
  sleep 7
done
