#!/bin/bash

# For the BASEDIR, either specifying -opt or -dbg is fine, the script will auto-compute the other directory
# A single opt or dbg workdir instance will tend to take 0.4-0.8 GB of space (usually on /dev/shm)
#BASEDIR=MDEV-30619_postfix_MD190723-mariadb-10.4.31-linux-x86_64-opt
#BASEDIR=MDEV-30619_prefix_MD190723-mariadb-10.4.31-linux-x86_64-opt
#BASEDIR=UBASAN_MD030823-mariadb-11.2.0-linux-x86_64-dbg
#BASEDIR=MD010823-mariadb-11.2.0-linux-x86_64-dbg
#BASEDIR=/test/EMD230823-TODO-4178-mariadb-10.6.14-9-linux-x86_64-dbg
#BASEDIR=/test/EMD240823-TODO-4178-mariadb-10.6.14-9-linux-x86_64-dbg
#BASEDIR=/test/MD260823-mariadb-11.3.0-linux-x86_64-dbg
#BASEDIR=/test/MD110923-mariadb-11.3.0-linux-x86_64-dbg
#BASEDIR=/test/preview-11.3-preview_MD120923-mariadb-11.3.0-linux-x86_64-opt
#BASEDIR=/test/PATCH_EMD260923-mariadb-10.6.14-9-linux-x86_64-dbg
#BASEDIR=/test/PATCH_MD270923-mariadb-10.6.16-linux-x86_64-dbg
#BASEDIR=/test/PATCH2_MD280923-mariadb-10.6.16-linux-x86_64-dbg
##BASEDIR=/test/PATCH3_MD031023-mariadb-10.6.16-linux-x86_64-dbg
##BASEDIR=/test/PATCH3_UBASAN_MD031023-mariadb-10.6.16-linux-x86_64-dbg
#BASEDIR=/test/MDEV28856_MD141023-mariadb-11.3.0-linux-x86_64-dbg
#BASEDIR=/test/MDEV28856_UBASAN_MD141023-mariadb-11.3.0-linux-x86_64-dbg
#BASEDIR=/test/BASE_MDEV28856_UBASAN_MD161023-mariadb-11.3.0-linux-x86_64-dbg
#BASEDIR=/test/HEAD_preview_11.3_preview_MD171023-mariadb-11.3.0-linux-x86_64-dbg
#BASEDIR=/test/HEAD_preview_11.3_preview_UBASAN_MD181023-mariadb-11.3.0-linux-x86_64-opt
#BASEDIR=/test/MDEV-27247_SSL_MD191023-mariadb-11.3.0-linux-x86_64-dbg
#BASEDIR=/test/SSL_HEAD_preview-11.3-preview_MD191023-mariadb-11.3.0-linux-x86_64-dbg
#BASEDIR=/test/TRUNK_SSL_MD191023-mariadb-11.3.0-linux-x86_64-dbg
#BASEDIR=/test/28856_P2_MD211023-mariadb-11.3.0-linux-x86_64-opt
#BASEDIR=/test/HEAD_preview_11.3_preview_MD171023-mariadb-11.3.0-linux-x86_64-dbg
#BASEDIR=/test/MD311023-mariadb-11.4.0-linux-x86_64-opt
BASEDIR=/test/MD311023-mariadb-11.3.0-linux-x86_64-dbg
#BASEDIR=/test/28856_P2_UBASAN_MD211023-mariadb-11.3.0-linux-x86_64-opt
#BASEDIR=/test/MDEV-27247_MD171023-mariadb-11.3.0-linux-x86_64-dbg
#BASEDIR=/test/MDEV-27247_UBASAN_MD171023-mariadb-11.3.0-linux-x86_64-dbg
#BASEDIR=/test/BASE_MDEV28856_MD161023-mariadb-11.3.0-linux-x86_64-opt
#BASEDIR=/test/BASE_UBASAN_MD071023-mariadb-10.6.16-linux-x86_64-dbg
#PATCH3_UBMSAN_MD041023-mariadb-10.6.16-linux-x86_64-dbg
##BASEDIR=/test/BASE_MD260923-mariadb-10.6.16-linux-x86_64-dbg
#preview-11.3-preview_MDEV-28856_MD160923-mariadb-11.3.0-linux-x86_64-dbg
#MD020923-mariadb-11.3.0-linux-x86_64-dbg
#EMD250823-10.6.14-9-enterprise-MDEV-30165-MENT-1905-mariadb-10.6.14-9-linux-x86_64-dbg
#bb-10.6-primary-corruption_MD260723-mariadb-10.6.15-linux-x86_64-dbg
#MDEV-30619_postfix2_MD220723-mariadb-10.4.31-linux-x86_64-opt
#MD220623-mariadb-11.1.2-linux-x86_64-dbg
#UBASAN_MD120523-mariadb-10.11.4-linux-x86_64-dbg
#MD120523-mariadb-11.1.0-linux-x86_64-opt
#BASEDIR=MD060523-mariadb-11.0.2-linux-x86_64-dbg
#MD070423-mariadb-10.11.3-linux-x86_64-dbg
#MD070423-mariadb-10.7.8-linux-x86_64-dbg
#/test/MD070423-mariadb-11.0.2-linux-x86_64-dbg
#BASEDIR=/test/MD010423-mariadb-11.1.0-linux-x86_64-dbg
#BASEDIR=/test/UBASAN_MD250323-mariadb-11.0.2-linux-x86_64-dbg
#VALGRIND_MD270323-mariadb-11.0.2-linux-x86_64-dbg
#bb-10.6-MDEV-26055-MDEV-26827_MD130323-mariadb-10.6.13-linux-x86_64-dbg
#BASEDIR=/test/MD110223-mariadb-10.11.2-linux-x86_64-dbg
#BASEDIR=/test/MDEV-16329_bb-11.0-oalter_MD210223-mariadb-11.0.1-linux-x86_64-opt
RUNSOPT=2
RUNSDBG=3
#CONF=pquery-run-MD-spider.conf
CONF=pquery-run-MD-replication.conf  # Replication, PRE_SHUFFLE_SQL=2
#CONF=pquery-run-MD-federated.conf
#CONF=pquery-run-mdev-31152.conf
#CONF=pquery-run-MD-crt.conf
#CONF=pquery-run-MD-allb.conf
#CONF=pquery-run-MD.conf  
#CONF=pquery-run-MD-XA.conf  # PRE_SHUFFLE_SQL=1, using xa-main-ms-ps-md_v2.sql
#CONF=pquery-run-MD2.conf  # Using PRE_SHUFFLE_SQL=2
#CONF=pquery-run-MD-multi.conf  # Using PRE_SHUFFLE_SQL=2, multithreaded
#CONF=pquery-run-MD-SAN.conf  # Using PRE_SHUFFLE_SQL=2, SAN
#CONF=pquery-run-MD-VAL.conf  # Using PRE_SHUFFLE_SQL=2, VAL
#CONF=pquery-run-MD-spider-SAN.conf  # Using PRE_SHUFFLE_SQL=2, SAN
#CONF=pquery-run-MD-innodb-MDEV-30531-SAN.conf  # PRE_SHUFFLE_SQL=2, SAN, PRELOAD_SQL
#CONF=pquery-run-MD-btrfs.conf
#CONF=pquery-run-MDEV-24660.conf   # File name only, no spaces, no directories
#CONF=pquery-run-MD-buf.conf
#CONF=pquery-run-MD-rr.conf
#CONF=pquery-run-MD-idb1.conf
#CONF=pquery-run-MD105-MT.conf

if [ -z "${CONF}" ]; then
  echo "Error: \$CONF was not set. Please point it to a pquery-run.conf file like pquery-run-MD.conf (path is not required)"
  exit 1
elif [[ "${CONF}" == *"/"* ]]; then 
  echo "Assert: no paths/directories allowed in CONF (${CONF}) setting!"
  exit 1
elif [ ! -r "${HOME}/mariadb-qa" ]; then
  echo "Assert: ${HOME}/mariadb-qa not available"
  exit 1
elif [ ! -r ${HOME}/mariadb-qa/${CONF} ]; then
  echo "Assert: ${HOME}/mariadb-qa/${CONF} not available"
  exit 1
fi

if [ -z "${BASEDIR}" ]; then
  echo "The basedir variable BASEDIR was not set. Typo?"
  exit 1
fi

if grep -qi '^[ \t]*PRE_SHUFFLE_SQL[ \t]*=[ \t]*2' ${HOME}/mariadb-qa/${CONF}; then
  echo "*************************************************************************************************************************"
  echo "*** IMPORTANT NOTE: PRE_SHUFFLE_SQL=2 is set. No custom-set SQL input file will be used! Make sure this was intended! ***"
  echo "*************************************************************************************************************************"
  sleep 2
else
  echo "PRE_SHUFFLE_SQL setting: $(grep -io '^[ \t]*PRE_SHUFFLE_SQL[ \t]*=[ \t]*[0-9]\+' ${HOME}/mariadb-qa/${CONF} | grep -o '[0-9]\+')"
fi

if [[ "${BASEDIR}" != "/test"* ]]; then
  BASEDIRNEW="$(echo "/test/${BASEDIR}" | sed 's|/\./|/|g')"
  if [ -d "${BASEDIRNEW}" ]; then
    BASEDIR="${BASEDIRNEW}"
    echo "Basedir updated to ${BASEDIR}"
  fi
  BASEDIRNEW=
fi

if [ ! -d "${BASEDIR}" ]; then
  echo "The basedir (${BASEDIR}) does not exist or is not readable by this script! Terminating."
  exit 1
fi

echo "Basedir: ${BASEDIR}"
echo "Configuration in use: ${HOME}/mariadb-qa/${CONF}"
echo "This script should show further output in 10-20 seconds. If it does not, see:"
echo "screen -d -r pr1  # for the cause"
echo ""

rm -Rf /data/tmp/*.sql

TOTALRUNS=$[ ${RUNSOPT} + ${RUNSDBG} ]
MON=
for RUN in $(seq 1 ${TOTALRUNS}); do
  rm -f /tmp/gomd_helper
  cd ${HOME}/mariadb-qa
  if [ ! -r ${CONF} ]; then echo "Assert: ${CONF} not found!"; exit 1; fi
  sed -i "s|^BASEDIR=\([^#]\+\)|BASEDIR=${BASEDIR}   |" ${CONF}
  if [ ${RUN} -le ${RUNSOPT} ]; then  # Opt runs
    sed -i 's|^BASEDIR=\([^#]\+\)-dbg|BASEDIR=\1-opt|' ${CONF}
  else  # Dbg runs
    sed -i 's|^BASEDIR=\([^#]\+\)-opt|BASEDIR=\1-dbg|' ${CONF}
  fi
  screen -admS pr${RUN} bash -c "cd ${HOME}/mariadb-qa; ./pquery-run.sh ${CONF}; bash"
  while :; do
    sleep 1
    if [ -r /tmp/gomd_helper ]; then
      sleep 0.3
      DIR="$(cat /tmp/gomd_helper)"
      if [ -d "${DIR}" ]; then
        rm -f /tmp/gomd_helper
        cd ${DIR}/..
        DIREND="$(echo "${DIR}" | sed 's|.*/||')"
        if [ ! -d ./${DIREND} ]; then
          echo "Assert: ./${DIREND} should exist, based on directory passed by gomd_helper (${DIR})"
          exit 1; break
        else
          if [[ "${CONF}" != *"crt"* && "${CONF}" != *"CRT"* ]]; then  # Do not stat ge instances for crash recovery runs
            if [ ! -r ~/sge ]; then 
              echo "Assert: ~/sge not available! Cannot start pquery-go-expert!" 
              exit 1; break
            else
              ~/sge "${DIREND}" "pr${RUN}"
              TYPE="DBG"
              if [ ${RUN} -le ${RUNSOPT} ]; then TYPE="OPT"; fi
              echo "MD ${TYPE} Run ${RUN} started (Dir: ${DIR} Screen: pr${RUN}), and pquery-go-expert started for the same!"
              MON[RUN]="$(echo "${DIR}" | sed 's|.*/||' | grep -o '[0-9]\+')"
              break
            fi
          else
            if [ ! -r ~/crc ]; then
              echo "Assert: ~/crc not available! Cannot start crash recovery handlers!" 
              exit 1; break
            else
              screen -admS "crc$(echo "${DIR}" | sed 's|.*/||')" bash -c "cd ${DIR}; while true; do ~/crc; sleep 20; done; bash"  # Start crash testing handler for the (each) workdir
              TYPE="DBG"
              if [ ${RUN} -le ${RUNSOPT} ]; then TYPE="OPT"; fi
              echo "MD ${TYPE} Run ${RUN} started (Dir: ${DIR} Screen: pr${RUN}), and a crash recovery handler (~/crc) started for the same!"
              MON[RUN]="$(echo "${DIR}" | sed 's|.*/||' | grep -o '[0-9]\+')"
              break
            fi
          fi
        fi 
      fi
    fi
  done
done
echo ""
echo "For updating the results script (add/edit /data/results.list, then run the /data/results script):"
for RUN in $(seq 1 ${TOTALRUNS}); do
  echo "MON[${RUN}]=${MON[${RUN}]}"
done
