#!/bin/bash
# Created by Ramesh Sivaraman and Roel Van de Paar, MariaDB

USER="$(whoami)"

if [ ! -d /test/TESTCASES -o ! -d /data/NEWBUGS ]; then
  sudo mkdir -p /test /data /test/TESTCASES/ /data/NEWBUGS /data/tmp
  sudo chown -R ${USER}:${USER} /test
  sudo chown -R ${USER}:${USER} /data
  sudo chmod -R +rX /test
  sudo chmod -R +rX /data
fi

# Squirrel/AFL
# mariadb-qa/squirrel: a copy of the squirrel repo, with modified code (for example afl-fuzz.c) for MariaDB QA
# mariadb-qa/fuzzing: files, script, binaries required for fuzzing (binaries compiled from mariadb-qa/squirrel/MariaDB/AFL)
# /home/${USER}/fuzzing: fully and automatically created by this script with symlinks to all required files in mariadb-qa
# fuzzing_root: created as /home/${USER}/fuzzing/fuzzing_root by this script (if not present yet): contains grammar files
# See https://github.com/s3team/Squirrel/issues/11 for more information on grammar creation and related topics
mkdir -p /home/${USER}/fuzzing/fuzzing_root/ /home/${USER}/fuzzing/newbugs
ln -fs /home/${USER}/mariadb-qa/fuzzer/go /home/${USER}/fuzzing/fuzzing_root/go 2>&1
ln -fs /home/${USER}/mariadb-qa/fuzzer/README /home/${USER}/fuzzing/README
ln -fs /home/${USER}/mariadb-qa/fuzzer/SETUP /home/${USER}/fuzzing/SETUP
ln -fs /home/${USER}/mariadb-qa/fuzzer/PROCEDURE /home/${USER}/fuzzing/PROCEDURE
ln -fs /home/${USER}/mariadb-qa/fuzzer/afl_genstart_tmpfs_nodes /home/${USER}/fuzzing/start_fuzzing
ln -fs /home/${USER}/mariadb-qa/fuzzer/del_known_bugs /home/${USER}/fuzzing/del_known_bugs
ln -fs /home/${USER}/mariadb-qa/fuzzer/list_unique_bugs_seen /home/${USER}/fuzzing/list_unique_bugs_seen
ln -fs /home/${USER}/mariadb-qa/fuzzer/reports /home/${USER}/fuzzing/reports
ln -fs /home/${USER}/mariadb-qa/fuzzer/find_uniqueid /home/${USER}/fuzzing/find_uniqueid
ln -fs /home/${USER}/mariadb-qa/fuzzer/queue_stats /home/${USER}/fuzzing/queue_stats
ln -fs /home/${USER}/mariadb-qa/fuzzer/process_testcases /home/${USER}/fuzzing/process_testcases
ln -fs /home/${USER}/mariadb-qa/fuzzer/process_testcases_loop /home/${USER}/fuzzing/process_testcases_loop
ln -fs /home/${USER}/mariadb-qa/fuzzer/clean_queues /home/${USER}/fuzzing/clean_queues
ln -fs /home/${USER}/mariadb-qa/fuzzer/check_loops /home/${USER}/fuzzing/check_loops
ln -fs /home/${USER}/mariadb-qa/fuzzer/stop_all_fuzzing /home/${USER}/fuzzing/stop_all_fuzzing
ln -fs /home/${USER}/mariadb-qa/fuzzer/stop_process_testcases /home/${USER}/fuzzing/stop_process_testcases
ln -fs /home/${USER}/mariadb-qa/fuzzer/stop_reducers_run /home/${USER}/fuzzing/stop_reducers_run
ln -fs /home/${USER}/mariadb-qa/fuzzer/reducers_run /home/${USER}/fuzzing/reducers_run
ln -fs /home/${USER}/mariadb-qa/fuzzer/reducers_run_loop /home/${USER}/fuzzing/reducers_run_loop
# The ./afl script for basedirs is auto-linked by ~/start, and here it is also linked into ~/fuzzing for editing convience
ln -fs /home/${USER}/mariadb-qa/fuzzer/afl /home/${USER}/fuzzing/afl
for ((i=0;i<10;i++)); do
  ln -fs /home/${USER}/mariadb-qa/fuzzer/afl${i}-fuzz /home/${USER}/fuzzing/afl${i}-fuzz
done
# Setup a default/usable fuzzing_root if does not exist yet
if [ ! -d /home/${USER}/fuzzing/fuzzing_root/init_lib ]; then
  cp -r /home/${USER}/squirrel/MariaDB/docker/init_lib /home/${USER}/fuzzing/fuzzing_root/
  cp -r /home/${USER}/squirrel/MariaDB/docker/input /home/${USER}/fuzzing/fuzzing_root/
  cp /home/${USER}/squirrel/MariaDB/docker/global_data_lib_mysql /home/${USER}/fuzzing/fuzzing_root/global_data_lib_mysql
  # Apparently this file is not required, ref https://github.com/s3team/Squirrel/issues/11
  # However, it is used in the code (ref afl-fuzz.c):
  # #define SAFE_GENERATE_PATH "./safe_generate_type_mysql"
  # g_mutator.init_safe_generate_type(SAFE_GENERATE_PATH);
  cp /home/${USER}/squirrel/MariaDB/docker/safe_generate_type_mysql /home/${USER}/fuzzing/fuzzing_root/safe_generate_type_mysql
fi

# Homedir scripts
rm -f ~/tcp ~/pge ~/pg ~/tr ~/tc ~/t ~/fc ~/mcl ~/s
ln -fs /home/${USER}/mariadb-qa/homedir_scripts/* /home/${USER}/ 2>&1
ln -fs /home/${USER}/mariadb-qa/testcase_prettify.sh /home/${USER}/tcp 2>&1
ln -fs /home/${USER}/mariadb-qa/pquery-goexp-patch.sh /home/${USER}/pge 2>&1
ln -fs /home/${USER}/mariadb-qa/pquery-goexp-patch.sh /home/${USER}/depge 2>&1
ln -fs /home/${USER}/mariadb-qa/pquery-go-expert.sh /home/${USER}/pg 2>&1
ln -fs /home/${USER}/mariadb-qa/pquery-todays-runs.sh /home/${USER}/tr 2>&1
ln -fs /home/${USER}/mariadb-qa/copy_testcases.sh /home/${USER}/tc 2>&1
ln -fs /home/${USER}/mariadb-qa/new_text_string.sh /home/${USER}/t 2>&1
ln -fs /home/${USER}/mariadb-qa/find_cause.sh /home/${USER}/fc 2>&1
ln -fs /home/${USER}/mariadb-qa/pquery-allsubdir-del-string.sh /home/${USER}/mcl 2>&1
ln -fs /home/${USER}/mariadb-qa/pquery-screen.sh /home/${USER}/s 2>&1
ln -fs /home/${USER}/mariadb-qa/san_text_string.sh /home/${USER}/st 2>&1

# Build scripts (mostly/mainly used from /test)
ln -fs /home/${USER}/mariadb-qa/mariadb-build-qa/* /test/ 2>&1
ln -fs /home/${USER}/mariadb-qa/mariadb-build-qa/* /data/ 2>&1
ln -fs /home/${USER}/mariadb-qa/mariadb-build-qa/current_runs_testcases /home/${USER}/crt 2>&1
rm -f /data/[odut][0-9]  # Remove changedir scripts (like '. ./d7' etc.) normally only used in /test

# Mass testcase scripts
ln -fs /home/${USER}/mariadb-qa/testcase-scripts/* /test/TESTCASES/ 2>&1
ln -fs /home/${USER}/mariadb-qa/newbugs/uniq_newbugs /test/TESTCASES/uniq_newbugs 2>&1

# Newbugs (new bugs found by reducer while reducing) & Fireworks nwebugs & Fuzzing newbugs
ln -fs /home/${USER}/mariadb-qa/newbugs/* /data/NEWBUGS/ 2>&1
ln -fs /home/${USER}/mariadb-qa/mariadb-build-qa/clean_newbugs /data/NEWBUGS/clean_newbugs 2>&1
ln -fs /home/${USER}/mariadb-qa/newbugs/* /home/${USER}/fuzzing/newbugs 2>&1
ln -fs /home/${USER}/mariadb-qa/mariadb-build-qa/clean_newbugs /home/${USER}/fuzzing/newbugs/clean_newbugs 2>&1

# Link ~/BUGS to ~/mariadb-qa/BUGS for ease-of-access
if [ ! -d /home/${USER}/BUGS ]; then
  ln -fs /home/${USER}/mariadb-qa/BUGS /home/${USER}/BUGS 2>&1
fi

# Add any bugs not commited yet
cd /home/${USER}/mariadb-qa/BUGS
git add *

# Create REGEX_EXCLUDE if it does not exist yet, adding some common defaults
if [ ! -r /test/REGEX_EXCLUDE ]; then 
  echo 'MDEV|VALGRIND' > /test/REGEX_EXCLUDE
fi

# Protect homedir links which are easily overwritten by mistake
chmod -w ~/b ~/c ~/i ~/m ~/o ~/p ~/r

echo 'Done!'
exit 0
